{"0": {"index": 0, "short_name": "3D", "full_name": "Are your images 3D?", "select_all": false, "slider": false, "long_description": "Whether or not the images you wish to analyze are 3D.", "section": "image", "changes_based_on_3d": false, "options": {"Yes": {"cellprofiler_suggester": "You said your images are 3D. Please make sure to select this in the NamesAndTypes module"}, "No": {"cellprofiler_suggester": "You said your images are 2D. Please make sure to select this in the NamesAndTypes module"}, "Yes, but I wish to Z project them before proceeding": {"cellprofiler_suggester": "You said your images are 3D but need projection. Please first run a pipeline to project them (a written and video demo are available [here](https://forum.image.sc/t/input-modules-tutorial/63911#h-3d-processing-4814-6)). Once these are created, the now-2D projections can be used in their own CellProfiler pipeline."}}, "default_option_index": 1}, "1": {"index": 1, "short_name": "timelapse", "full_name": "Are you trying to analyze images from a timelapse series?", "select_all": false, "slider": false, "long_description": "Whether or not images are coming from the same position over time, and objects should be related to one another over from time point to time point", "section": "image", "changes_based_on_3d": true, "options": {"Yes": {"cellprofiler_suggester": {"3D_False": "You have said your images come from a time series. If you wish to track objects across time points, you may do so using the TrackObjects module. If you are analyzing more than one movie, you will need to use the Metadata module to identify metadata (such as a file or folder name) that can be used to distinguish the movies, and the Groups module to group your timeframes into movies; see those module's help settings and broad.io/CellProfilerInput for more information for more information.", "3D_True": "You have said your images come from a time series. Unfortunately, the TrackObjects module does not support 3D images at this time. If you cannot first Z project your images, you unfortunately cannot use CellProfiler for tracking at this time."}}, "No": {"cellprofiler_suggester": {"3D_False": false, "3D_True": false}}}, "default_option_index": 1}, "2": {"index": 2, "short_name": "microscope_methodology", "full_name": "What is the microscope methodology?", "select_all": false, "slider": false, "long_description": "Whether the image that will eventually be used for segmentation (possibly after post-processing) is unstained brightfield (including phase contrast and DIC), histology stained brightfield, or fluorescence.", "section": "image", "changes_based_on_3d": false, "options": {"Brightfield - unstained": {"cellprofiler_suggester": "You said your images are unstained brightfield. CellProfiler requires your images be bright in the areas you wish to segment and dim in the areas you don't; this is rarely the case with unstained brightfield. EnhanceOrSuppressFeatures in 'Texture' mode may be sufficient for what you need; if not, then using a pixel classification tool like ilastik or Trainable Weka Segmentation before using CellProfiler may help get your data into the format you need (see our Pixel Classification tutorial for more details). You can also consider using a neural network tool such as Cellpose that allows direct segmentation from brightfield (either before using CellProfiler or using the RunCellpose plugin)."}, "Brightfield - histology stained": {"cellprofiler_suggester": "You said your images are histologically stained. CellProfiler requires your images be bright in the areas you wish to segment and dim in the areas you don't; the UnmixColor module can do this for you. Note that this module does not support 3D in CellProfiler 4, but this functionality is avaialable when CellProfiler is installed from source and will be included in CellProfiler 5."}, "Fluorescence": {"cellprofiler_suggester": "You said your images are flurorescent. CellProfiler requires your images be bright in the areas you wish to segment and dim in the areas you don't; if at least one channel of your images already looks like this, nothing else is needed. If you want to segment the dimmer rather than the brighter parts of your fluorescent signal (such as segmenting nuclei from the dimmer 'holes' in ie an actin stain), you may find that using ImageMath's 'Invert' option helps you, though you will likely need to mask out background pixels for this strategy to succeed."}}, "default_option_index": 2}, "3": {"index": 3, "short_name": "align_register", "full_name": "Does alignment and/or registration need to be applied before proceeding?", "select_all": false, "slider": false, "long_description": "Whether an image needs to be aligned or registered (to other channels, other XY positions, other time points, to a reference atlas, etc) before analysis", "section": "image", "changes_based_on_3d": true, "options": {"No registration required": {"cellprofiler_suggester": {"3D_False": false, "3D_True": false}}, "Need to align images to other images": {"cellprofiler_suggester": {"3D_False": "You said your image needs to be aligned to another image. If the other image is another channel, this can be easily done with the Align module; if you want to align all images to a master template, this can be done by providing a 'Single image' in NamesAndTypes (see broad.io/CellProfilerInput for more information). Aligning timelapse images to the directly previous frame is not possible without advanced scripting; this is more easily done in another program (such as Fiji) before import into CellProfiler. Aligning tiled images with no tile overlap can be done using the Tile module, though note that this should be performed in a separate pipeline consisting of only one Tile and one SaveImages module per channel, and the resulting tiled image(s) then used in a new pipeline. Aligning or registerig images with overlap is not currently possible and should be done in another program (ie Fiji) before bringing registered images into CellProfiler.", "3D_True": "3D alignment is not currently enabled in CellProfiler; perform alignment in another appropriate tool (such as Fiji) before bringing aligned images into CellProfiler."}}, "Need to align images to a reference atlas": {"cellprofiler_suggester": {"3D_False": "You said your image needs to be aligned to a reference atlas. This can be done by providing the reference as a 'Single image' in NamesAndTypes (see broad.io/CellProfilerInput for more information).", "3D_True": "3D alignment is not currently enabled in CellProfiler; perform alignment in another appropriate tool (such as Fiji) before bringing aligned images into CellProfiler."}}}, "default_option_index": 0}, "4": {"index": 4, "short_name": "bleedthrough", "full_name": "Is fluorescent bleedthrough present in these images?", "select_all": false, "slider": false, "long_description": "Whether bleedthrough of fluorescent channels is present in the images; this typically occurs when using multiple dyes with very close spectral signatures", "section": "image", "changes_based_on_3d": false, "options": {"NA/Not fluorescent and/or multichannel": {"cellprofiler_suggester": false}, "No": {"cellprofiler_suggester": false}, "Yes, but we don't need to apply a correction in this workflow": {"cellprofiler_suggester": "You said you expect bleedthrough but do not wish to attempt to correct it. This is appropriate in some circumstances (such as when the spectrally overlapping dyes are very well spatially separated), but be sure to keep this in mind for any downstream data processing you may do."}, "Yes, and we do need to apply a correction in this workflow": {"cellprofiler_suggester": "You said you expect bleedthrough in these images and wish to correct it; for rough correction, you may find operations in ImageMath (such as the ability to divide or subtract images) helpful in this. For a more sophisticated option, you may find the CompensateColors CellProfiler plugin helpful; it is available at https://github.com/CellProfiler/CellProfiler-plugins"}}, "default_option_index": 1}, "5": {"index": 5, "short_name": "signal_to_noise", "full_name": "How would you describe the signal-to-noise + signal-to-background ratios between background and true signal?", "select_all": false, "slider": true, "long_description": "The approximate separability of areas of the image that have true fluorescent signal vs autofluorescence or nonspecific signal; see [here for more description](https://bioimagebook.github.io/chapters/3-fluorescence/3-formation_noise/formation_noise.html).", "section": "image", "changes_based_on_3d": false, "options": {"NA/Not fluorescent": {"cellprofiler_suggester": false}, "Poor (histogram peaks nearly indistinguishable)": {"cellprofiler_suggester": "You have said the intensity separation between true signal and other areas is poor; it may be advisable to repeat the experiment to achieve better signal. You might try a few options within CellProfiler: a) turning on 'Log transform before thresholding?' when thresholding b) using the ImageMath module to raise your image to an exponent >1 (by setting 'Operation' to 'None' and then setting the 'Raise the power of the result by' as needed c) using the EnhanceOrSuppressFeatures module to remove large areas of non-specific intensity d) using CorrectIlluminationCalculate and CorrectIlluminationApply to find and remove background areas. Otherwise, you may wish to first run the images through a pixel classification program such as ilastik or Weka Trainable Segmentation to identify the areas where your object is located, and adding the predictions from those programs as a channel in CellProfiler. You may also wish to consider non-classical segmentation modules, such as RunCellpose or RunStarDist."}, "OK (histogram peaks obvious but overlapping)": {"cellprofiler_suggester": "You have said the intensity separation between true signal and other areas is only ok; if you are unable to generate reliable thresholding for your areas of interest, you might consider a few options: a) turning on 'Log transform before thresholding?' when thresholding b) using the ImageMath module to raise your image to an exponent >1 (by setting 'Operation' to 'None' and then setting the 'Raise the power of the result by' as needed c) using the EnhanceOrSuppressFeatures module to remove large areas of non-specific intensity d) using CorrectIlluminationCalculate and CorrectIlluminationApply to find and remove background areas."}, "Great (histogram peaks fully distinct)": {"cellprofiler_suggester": false}}, "default_option_index": 2}, "6": {"index": 6, "short_name": "surface_marker", "full_name": "Is there a marker for the desired object that smoothly covers the whole object?", "select_all": false, "slider": false, "long_description": "Whether or not there is a whole-surface marker that covers the object's surface. There can be gradations and/or especially bright or dark areas, but the whole surface of the object in the imaging plane is marked.", "section": "image", "changes_based_on_3d": false, "options": {"Yes": {"cellprofiler_suggester": "You have stated you do have a marker that (at least somewhat) smoothly covers the object's surface. This channel is likely the one you wish to use in IdentifyPrimaryObjects (or IdentifySecondaryObjects) to segment the object."}, "No": {"cellprofiler_suggester": "You have stated you do not have a marker that (at least somewhat) smoothly covers the object's surface. Most classical segmentation methods require such a channel; options for creating such a channel might include a) if your object is more highly textured than other areas, using the EnhanceOrSuppressFeatures module in Texture mode to create a pseudo-channel b) if you have a boundary marker, inverting the image in ImageMath (though note that this will require you to mask out non-object areas, so is most appropriate for images with very low background and or objects being created in the IdentifySecondarObjects module or c) using a pixel classification program such as ilastik or Weka Trainable Segmentation first to identify the areas where your object is located, and adding the predictions from those programs as a channel in CellProfiler. You may also wish to consider non-classical segmentation modules, such as RunCellpose or RunStarDist."}}, "default_option_index": 0}, "7": {"index": 7, "short_name": "edge_marker", "full_name": "Is there a marker for the desired object that specifically highlights its edges?", "select_all": false, "slider": false, "long_description": "Whether or not there is a marker specifically for the edge of the objects", "section": "image", "changes_based_on_3d": false, "options": {"Yes": {"cellprofiler_suggester": "You said you have an image that has an edge marker for the objects in question. If segmentation proves otherwise challenging, you could consider thresholding the edge marker image with the Threshold module, then running MaskImage with 'Invert the Mask?' set to 'Yes' to remove any boundary-positive areas from the image you planned to use for segmentation. This can sometimes help when objects are very crowded. An inverted edge image can also sometimes be used as an image to find the objects, if ways can be found to identify and mask out any areas of the image that are background."}, "No": {"cellprofiler_suggester": false}}, "default_option_index": 1}, "8": {"index": 8, "short_name": "image_qc_issues", "full_name": "Which if any of the following image quality issues are present? Select all that apply.", "select_all": true, "slider": false, "long_description": "Whether any of several quality issues and/or artifacts are present in the images.", "section": "image", "changes_based_on_3d": true, "options": {"Overconfluence": {"cellprofiler_suggester": {"3D_False": "You said your images may contain overconfluence. Crowded and/or overlapping objects may be difficult to directly identify: if your objects have a one-to-one relationship with an enclosed or semi-enclosed more-easily-separable object (like cells and nuclei), you should consider identifying the enclosed object first with IdentifyPrimaryObjects and this object with IdentifySecondaryObjects. Otherwise, you might consider a non-classical segmentation module, such as RunCellpose or RunStarDist (if your object is star-convex)", "3D_True": "You said your images may contain overconfluence. Crowded and/or overlapping objects may be difficult to directly identify: if your objects have a one-to-one relationship with an enclosed or semi-enclosed more-easily-separable object (like cells and nuclei), you should consider identifying the enclosed object first (with Threshold and Watershed) and then using these objects as seeds for a second round of Threshold followed by marker-based Watershed. Otherwise, you might consider a non-classical segmentation module, such as RunCellpose or RunStarDist (if your object is star-convex)"}}, "Debris": {"cellprofiler_suggester": {"3D_False": "You said your images may contain debris. You may wish to run IdentifyPrimaryObjects first to identify the debris, expand the debris objects slightly (typically 2-3 pixels) with ExpandOrShrinkObjects, then use MaskImage to mask your identification image with the expanded debris objects. You can then identify your objects as you typically would.", "3D_True": "You said your images may contain debris. You may wish to to run Threshold and Watershed first to identify the debris, expand the debris objects slightly (typically 2-3 voxels) with DilateObjects, then use MaskImage to mask your identification image with the expanded debris objects. You can then identify your objects as you typically would."}}, "Inconsistent focus": {"cellprofiler_suggester": {"3D_False": "You said your images may contain focus issues; while CellProfiler does have a MeasureImageQuality module that can detect some blur metrics, determining the right metric and/or the exact cutoff can sometimes be challenging. If a varied enough group of bad images can be gathered, it may be possible to measure the affected images, then create a classifier in CellProfiler Analyst to detect errors. That classifier can then be brought back into CellProfiler using the FlagImage module.", "3D_True": "You said your images may contain focus issues; while CellProfiler does have a MeasureImageQuality module that can detect some blur metrics, determining the right metric and/or the exact cutoff can sometimes be challenging. If a varied enough group of bad images can be gathered, it may be possible to measure the affected images, then create a classifier in CellProfiler Analyst to detect errors. That classifier can then be brought back into CellProfiler using the FlagImage module."}}, "Variable background": {"cellprofiler_suggester": {"3D_False": "You said your images may have variable background. Using Adaptive thresholding methods may help with correctly thresholding object areas in such cases, though this may not perform well when objects are croweded and thus some areas contain very little background. You can also try using the CorrectIlluminationCalculate module (with 'Select how the illumination function is calculated' set to 'Background' and 'Rescale the illumination function?' set to 'No') and the CorrectIlluminationApply module (with 'Select how the illumination function is applied' set to 'Subtract'); smaller settings in 'Block size' will subtract background more aggressively, but ensure your block size is not so small that blocks contain no background.", "3D_True": "You said your images may have variable background. Using Adaptive thresholding methods may help with correctly thresholding object areas in such cases, though this may not perform well when objects are croweded and thus some areas contain very little background."}}, "Artifacts from tile stitching": {"cellprofiler_suggester": {"3D_False": "You said your images may contain artifacts from tile stitching; unfortunately CellProfiler does not have any easy way to detect or avoid these. If it is not possible to remove such artifacts, and a varied enough group of them can be gathered, it may be possible to measure the affected images and/or objects, then create a classifier in CellProfiler Analyst to detect errors. That classifier can then be brought back into CellProfiler (using the FlagImage module for image classifiers and the FilterObjects module for object classifiers.", "3D_True": "You said your images may contain artifacts from tile stitching; unfortunately CellProfiler does not have any easy way to detect or avoid these. If it is not possible to remove such artifacts, and a varied enough group of them can be gathered, it may be possible to measure the affected images and/or objects, then create a classifier in CellProfiler Analyst to detect errors. That classifier can then be brought back into CellProfiler (using the FlagImage module for image classifiers and the FilterObjects module for object classifiers."}}, "Artifacts from multi-view integration": {"cellprofiler_suggester": {"3D_False": "You said your images may contain artifacts from multi-view integrattion; unfortunately CellProfiler does not have any easy way to detect or avoid these. If it is not possible to remove such artifacts, and a varied enough group of them can be gathered, it may be possible to measure the affected images and/or objects, then create a classifier in CellProfiler Analyst to detect errors. That classifier can then be brought back into CellProfiler (using the FlagImage module for image classifiers and the FilterObjects module for object classifiers.", "3D_True": "You said your images may contain artifacts from multi-view integrattion; unfortunately CellProfiler does not have any easy way to detect or avoid these. If it is not possible to remove such artifacts, and a varied enough group of them can be gathered, it may be possible to measure the affected images and/or objects, then create a classifier in CellProfiler Analyst to detect errors. That classifier can then be brought back into CellProfiler (using the FlagImage module for image classifiers and the FilterObjects module for object classifiers."}}}, "default_option_index": 0}, "9": {"index": 9, "short_name": "object_constraints", "full_name": "What object constraints (if any) should be used to filter objects for validity? Select all that apply.", "select_all": true, "slider": false, "long_description": "Whether there are any restrictions and/or sanity checks that can be provided for the objects, based on the biologist's knowledge of the experiment", "section": "object", "changes_based_on_3d": true, "options": {"Minimum / maximum diameter": {"cellprofiler_suggester": {"3D_False": "You said there should be a minimum and/or maximum permitted object diameter. Hard cutoffs on diameter can be set during IdentifyPrimaryObjects using the 'Discard objects outside the diameter range?' setting. Objects can also be filtered on diameter by running MeasureObjectSizeShape followed by FilterObjects; by setting 'Select the filtering mode' to 'Measurements' and 'Select the filtering method' to 'Limits', minimum and/or maximum values can be provided.", "3D_True": "You said there should be a minimum and/or maximum permitted object diameter. Objects can be filtered on diameter by running MeasureObjectSizeShape followed by FilterObjects; by setting 'Select the filtering mode' to 'Measurements' and 'Select the filtering method' to 'Limits' minimum and/or maximum values can be provided."}}, "Minimum / maximum count": {"cellprofiler_suggester": {"3D_False": "You said there should be a minimum or maximum count of objects. You can set a hard cutoff for this in IdentifyPrimaryObjects by setting the 'Handling of objects if excessive number of identified' setting to 'Erase'; if the module's segmentation creates more than the 'Maximum number of objects' setting, all objects will be erased and no objects will be returned. You can also choose to flag or to skip image sets entirely based on the count of objects by adding a FlagImage module somewhere after IdentifyPrimaryObjects; set 'Flag image based on' to 'Whole-image measurement' setting and then choose the 'Count' category.", "3D_True": "You said there should be a minimum or maximum count of objects. You can choose to flag or to skip image sets entirely based on the count of objects by adding a FlagImage module somewhere after Watershed; set 'Flag image based on' to 'Whole-image measurement' setting and then choose the 'Count' category."}}, "Presence within another stain / object": {"cellprofiler_suggester": {"3D_False": "You said that the objects should only be identified within a certain other stain or object (in the latter case, the larger enclosing object is called the 'Parent object' and the enclosed objects 'Child objects' or 'Children'). This can be ensured by running IdentifyPrimaryObjects on an image that has already been masked accordingly with MaskImage. It can also be done after segmentation using RelateObjects by setting 'Do you want to save the children with parents as a new object set?' to 'Yes', or by using the MaskObjects module.", "3D_True": "You said that the objects should only be identified within a certain other stain or object (in the latter case, the larger enclosing object is called the 'Parent object' and the enclosed objects 'Child objects' or 'Children'). This can be ensured by running Watershed on an image that has already been masked accordingly with MaskImage. It can also be done after segmentation using RelateObjects by setting 'Do you want to save the children with parents as a new object set?' to 'Yes'"}}, "Minimum / maximum count within another object": {"cellprofiler_suggester": {"3D_False": "You said that these objects ('Child objects' or 'Children' in the context of CellProfiler) should have a maximum or minimum count within another object (known as the 'Parent' object). If there should only be 1 'internal' object, this can be enforced in FilterObjects by setting 'Select the filtering mode' to 'Measurements' and 'Select the filtering method' to 'Minimal per object' or 'Maximum per object' and identifying a criteria by which to identify the 'correct object'. If you wish to flag and/or skip images where there are too few or too many child objects per parent, this can be done in FlagImages by setting 'Flag is based on' to either 'Average measurement for all objects in each image' or 'Measurements for all objects in each image' (depending on if you want to use the most extreme values or just the per-image means), setting 'Select the object to be used for flagging' to the parent object, then selecting 'Children' as the category.", "3D_True": "You said that these objects ('Child objects' or 'Children' in the context of CellProfiler) should have a maximum or minimum count within another object (known as the 'Parent' object). If there should only be 1 'internal' object, this can be enforced in FilterObjects by setting 'Select the filtering mode' to 'Measurements' and 'Select the filtering method' to 'Minimal per object' or 'Maximum per object' and identifying a criteria by which to identify the 'correct object'. If you wish to flag and/or skip images where there are too few or too many child objects per parent, this can be done in FlagImages by setting 'Flag is based on' to either 'Average measurement for all objects in each image' or 'Measurements for all objects in each image' (depending on if you want to use the most extreme values or just the per-image means), setting 'Select the object to be used for flagging' to the parent object, then selecting 'Children' as the category."}}, "Minimum / maximum possible threshold": {"cellprofiler_suggester": {"3D_False": "You said that these objects should have a minimum or maximum threshold; this is often helpful when image quality is variable and/or there are many images. This can be set in IdentifyPrimaryObjects using the 'Lower and upper bounds on threshold' setting.", "3D_True": "You said that these objects should have a minimum or maximum threshold; this is often helpful when image quality is variable and/or there are many images. This can be set in Threshold using the 'Lower and upper bounds on threshold' setting."}}}, "default_option_index": 0}, "10": {"index": 10, "short_name": "shape", "full_name": "What shape is most characteristic of your objects?", "select_all": false, "slider": false, "long_description": "Whether objects tend to be round, square, linear (or rod shaped or worm shaped) or irregularly shaped.", "section": "object", "changes_based_on_3d": true, "options": {"Round": {"cellprofiler_suggester": {"3D_False": "You said your objects are round; either intensity- or shape- based object segmentation will likely work well for you.", "3D_True": "You said your objects are round; either intensity- or shape- based object segmentation will likely work well for you."}}, "Square": {"cellprofiler_suggester": {"3D_False": "You said your objects are square; either intensity- or shape- based object segmentation will likely work well for you. Note that if you are trying to identify a square grid, DefineGrid and IdentifyObjectsInGrid may increase your accuracy", "3D_True": "You said your objects are square; either intensity- or shape- based object segmentation will likely work well for you."}}, "Linear/extended": {"cellprofiler_suggester": {"3D_False": "You said your objects are linear or extended; classical segmentation may be challenging if your objects are not very well separated. If your objects are vaguely worm-shaped, you may try the WormToolbox modules to increase your chances of success; otherwise, you might consider a non-classical segmentation module, such as RunCellpose or RunStarDist (if your object is star-convex)", "3D_True": "You said your objects are linear or extended; classical segmentation may be challenging if your objects are not very well separated. You might consider a non-classical segmentation module, such as RunCellpose or RunStarDist (if your object is star-convex)"}}, "Irregular": {"cellprofiler_suggester": {"3D_False": "You said your objects are irregularly shaped; classical segmentation may be challenging if your objects are not very well separated. If your objects have a one-to-one relationship with an enclosed or semi-enclosed more-easily-separable object (like cells and nuclei), you should consider identifying the enclosed object first with IdentifyPrimaryObjects and this object with IdentifySecondaryObjects. Otherwise, you might consider a non-classical segmentation module, such as RunCellpose or RunStarDist (if your object is star-convex)", "3D_True": "You said your objects are irregularly shaped; classical segmentation may be challenging if your objects are not very well separated. If your objects have a one-to-one relationship with an enclosed or semi-enclosed more-easily-separable object (like cells and nuclei), you should consider identifying the enclosed object first with Threshold and Watershed and then using these objects as seeds for a second round of Threshold followed by marker-based Watershed. Otherwise, you might consider a non-classical segmentation module, such as RunCellpose or RunStarDist (if your object is star-convex)"}}}, "default_option_index": 0}, "11": {"index": 11, "short_name": "overlap", "full_name": "How much, if any, object overlap is expected?", "select_all": false, "slider": true, "long_description": "Whether or not two or more objects are expected to overlap within the same pixel/voxel. This typically can happen in one of two ways - primarily at object boundaries (such as in cell culture cells) or at any point within the object (such as with neurites,worms, or any 3D object with insufficient optical sectioning).", "section": "object", "changes_based_on_3d": true, "options": {"None": {"cellprofiler_suggester": {"3D_False": false, "3D_True": false}}, "Typically only at the object boundaries": {"cellprofiler_suggester": {"3D_False": "You said that you may expect object overlap at object boundaries. Note that CellProfiler only truly supports object overlap when using the modules from the Worm Toolbox or IdentifyObjectManually. Otherwise, segmentation of touching objects may be challenging; if 3D imaging with optical sectioning is not possible and if your objects have a one-to-one relationship with an enclosed or semi-enclosed more-easily-separable object (like cells and nuclei), you should consider identifying the ecnlosed object first with IdentifyPrimaryObjects and this object with IdentifySecondaryObjects. Otherwise, you might consider a non-classical segmentation module, such as RunCellpose or RunStarDist (if your object is star-convex)", "3D_True": "You said that you may expect object overlap at object boundaries; since you also said your image is 3D, consider taking thinner Z sections in future experiments, since 3D object 'overlap' is not possible in CellProfiler. Otherwise, segmentation of touching objects may be challenging; if your objects have a one-to-one relationship with an enclosed or semi-enclosed more-easily-separable object (like cells and nuclei), you should consider identifying the enclosed object first with Threshold and Watershed and then using these objects as seeds for a second round of Threshold followed by marker-based Watershed. Otherwise, you might consider a non-classical segmentation module, such as RunCellpose or RunStarDist (if your object is star-convex)"}}, "Overlap can happen anywhere within the object": {"cellprofiler_suggester": {"3D_False": "You said that you may expect object overlap at any point in the object. Note that CellProfiler only truly supports object overlap when using the modules from the Worm Toolbox or IdentifyObjectManually. Otherwise, if 3D imaging with optical sectioning is not possible, automated segmentation may not be feasible in CellProfiler.", "3D_True": "You said that you may expect object overlap at any point in the object; since you also said your image is 3D, consider taking thinner Z sections in future experiments, since 3D object 'overlap' is not possible in CellProfiler. Otherwise, segmentation of touching objects may be challenging; if your objects have a one-to-one relationship with an enclosed or semi-enclosed more-easily-separable object (like cells and nuclei), you should consider identifying the enclosed object first with Threshold and Watershed and then using these objects as seeds for a second round of Threshold followed by marker-based Watershed. Otherwise, you might consider a non-classical segmentation module, such as RunCellpose or RunStarDist (if your object is star-convex)"}}}, "default_option_index": 0}, "12": {"index": 12, "short_name": "median_diameter", "full_name": "What is the median object diameter?", "select_all": false, "slider": true, "long_description": "The median diameter of the object you want to segment, in pixels", "section": "object", "changes_based_on_3d": true, "options": {"1-3 px": {"cellprofiler_suggester": {"3D_False": "You said your object is typically 1-3 pixels in diameter. In IdentifyPrimaryObjects, a good initial guess of 'Typical Object Diameter' is 1-5", "3D_True": "You said your object is typically 1-3 pixels in diameter. In Watershed, if using the advanced settings, a good initial guess of 'Minimum distance between seeds' is 1 and 'Minimum absolute internal distance' is 1"}}, "3-10 px": {"cellprofiler_suggester": {"3D_False": "You said your object is typically 3-10 pixels in diameter. In IdentifyPrimaryObjects, a good initial guess of 'Typical Object Diameter' is 2-8", "3D_True": "You said your object is typically 3-10 pixels in diameter. In Watershed, if using the advanced settings, a good initial guess of 'Minimum distance between seeds' is ~2 and 'Minimum absolute internal distance' is ~2, though these numbers may be higher or lower for more variably sized objects"}}, "10-30 px": {"cellprofiler_suggester": {"3D_False": "You said your object is typically 10-30 pixels in diameter. In IdentifyPrimaryObjects, a good initial guess of 'Typical Object Diameter' is 8-40", "3D_True": "You said your object is typically 10-30 pixels in diameter. In Watershed, if using the advanced settings, a good initial guess of 'Minimum distance between seeds' is ~4 and 'Minimum absolute internal distance' is ~10, though these numbers may be higher or lower for more variably sized objects"}}, "30-100 px": {"cellprofiler_suggester": {"3D_False": "You said your object is typically 30-100 pixels in diameter. In IdentifyPrimaryObjects, a good initial guess of 'Typical Object Diameter' is 25-120", "3D_True": "You said your object is typically 30-100 pixels in diameter. In Watershed, if using the advanced settings, a good initial guess of 'Minimum distance between seeds' is ~20 and 'Minimum absolute internal distance' is ~30, though these numbers may be higher for more variably sized objects"}}, "100-300 px": {"cellprofiler_suggester": {"3D_False": "You said your object is typically 100-300 pixels in diameter. In IdentifyPrimaryObjects, a good initial guess of 'Typical Object Diameter' is 80-350", "3D_True": "You said your object is typically 100-300 pixels in diameter. In Watershed, if using the advanced settings, a good initial guess of 'Minimum distance between seeds' is ~60 and 'Minimum absolute internal distance' is ~100, though these numbers may be higher for more variably sized objects"}}, "300-1000 px": {"cellprofiler_suggester": {"3D_False": "You said your object is typically 300-1000 pixels in diameter. In IdentifyPrimaryObjects, a good initial guess of 'Typical Object Diameter' is 250-1200", "3D_True": "You said your object is typically 300-1000 pixels in diameter. In Watershed, if using the advanced settings, a good initial guess of 'Minimum distance between seeds' is ~200 and 'Minimum absolute internal distance' is ~250, though these numbers may be higher for more variably sized objects. You may find speeds slow at these sizes: consider using a Downsample value of >1."}}, "1000-3000 px": {"cellprofiler_suggester": {"3D_False": "You said your object is typically 1000-3000 pixels in diameter. In IdentifyPrimaryObjects, a good initial guess of 'Typical Object Diameter' is 800-3500", "3D_True": "You said your object is typically 1000-3000 pixels in diameter. In Watershed, if using the advanced settings, a good initial guess of 'Minimum distance between seeds' is ~600 and 'Minimum absolute internal distance' is ~900, though these numbers may be higher for more variably sized objects. You may find speeds slow at these sizes: consider using a Downsample value of >1."}}}, "default_option_index": 3}, "13": {"index": 13, "short_name": "size_range", "full_name": "Approximately how large is the size range between your biggest and smallest expected objects?", "select_all": false, "slider": true, "long_description": "Approximately how large the separation is between the largest expected objects and the smallest expected objects.", "section": "object", "changes_based_on_3d": true, "options": {"Range is +/- 30%": {"cellprofiler_suggester": {"3D_False": false, "3D_True": false}}, "Range is +/- 30% to 2-fold": {"cellprofiler_suggester": {"3D_False": "You have stated there may be a range of object sizes that are 30%-to-2-fold. Typically nothing special is needed under these circumstances, but if your objects are very crowded, setting 'Automatically calculate size of smoothing filter for declumping' and 'Automatically calculate minimum allowed distance between local maxima' to 'No' and tuning the newly exposed settings may help.", "3D_True": "You have stated there may be a range of object sizes that are 30%-to-2-fold. Typically nothing special is needed under these circumstances, but if your objects are very crowded, lightly eroding the Thresholded image with ErodeImage prior to Watershed (often followed by DilateObjects or a second round of Watershed using the first set of objects as seeds) may help."}}, "Range is 2-fold to 10-fold": {"cellprofiler_suggester": {"3D_False": "You have stated there may be a range of object sizes that are 2-to-10-fold. While setting 'Automatically calculate size of smoothing filter for declumping' and 'Automatically calculate minimum allowed distance between local maxima' to 'No' and tuning the newly exposed settings may help, if your objects are very crowded, you may have difficulty segmenting the objects in a single pass; you may wish to run IdentifyPrimaryObjects to identify the largest objects, expand them slightly (typically 2-3 pixels) with ExpandOrShrinkObjects, use MaskImage to mask your identification image with the expanded objects, then run a second pass with IdentifyPrimaryObjects on the masked image. This cycle can be repeated as needed, from the largest to smallest expected objects. The objects found in the various rounds can then be combined into a single object type with CombineObjects.", "3D_True": "You have stated there may be a range of object sizes that are 2-to-10-fold. While lightly eroding the Thresholded image with ErodeImage prior to Watershed (often followed by DilateObjects or a second round of Watershed using the first set of objects as seeds) may help, if your objects are very crowded, you may have difficulty segmenting the objects in a single pass; you may wish to run Threshold and Watershed to identify the largest objects, expand them slightly (typically 2-3 voxels) with DilateObjects, use MaskImage to mask your identification image with the expanded objects, then run a second pass with Threshold and Watershed on the masked image. This cycle can be repeated as needed, from the largest to smallest expected objects. The objects found in the various rounds can then be combined into a single object type with CombineObjects."}}, "Range is greater than 10-fold": {"cellprofiler_suggester": {"3D_False": "You have stated there may be a range of object sizes that are greater than 10-fold. Unless your objects are extremely well separated, you may have difficulty segmenting the objects in a single pass; you may wish to run IdentifyPrimaryObjects to identify the largest objects, expand them slightly (typically 2-3 pixels) with ExpandOrShrinkObjects, use MaskImage to mask your identification image with the expanded objects, then run a second pass with IdentifyPrimaryObjects on the masked image. This cycle can be repeated as needed, from the largest to smallest expected objects. The objects found in the various rounds can then be combined into a single object type with CombineObjects.", "3D_True": "You have stated there may be a range of object sizes that are greater than 10-fold. Unless your objects are extremely well separated, you may have difficulty segmenting the objects in a single pass; you may wish to run Threshold and Watershed to identify the largest objects, expand them slightly (typically 2-3 voxels) with DilateObjects, use MaskImage to mask your identification image with the expanded objects, then run a second pass with Threshold and Watershed on the masked image. This cycle can be repeated as needed, from the largest to smallest expected objects. The objects found in the various rounds can then be combined into a single object type with CombineObjects."}}}, "default_option_index": 0}, "14": {"index": 14, "short_name": "shape_consistency", "full_name": "How much consistency in shape do your objects have?", "select_all": false, "slider": true, "long_description": "How consistent objects tend to be with their shape - low, medium, or high", "section": "object", "changes_based_on_3d": true, "options": {"Low: shapes can vary widely": {"cellprofiler_suggester": {"3D_False": "You said your object shapes can vary widely; this may make segmentation more challenging if it means diameter also tends to vary widely. If your objects have a one-to-one relationship with an enclosed or semi-enclosed more-easily-separable object (like cells and nuclei), you should consider identifying the enclosed object first with IdentifyPrimaryObjects and this object with IdentifySecondaryObjects. Otherwise, you might consider a non-classical segmentation module, such as RunCellpose or RunStarDist (if your object is star-convex)", "3D_True": "You said your object shapes can vary widely; this may make segmentation more challenging if it means diameter also tends to vary widely. If your objects have a one-to-one relationship with an enclosed or semi-enclosed more-easily-separable object (like cells and nuclei), you should consider identifying the enclosed object first with Threshold and Watershed and then using these objects as seeds for a second round of Threshold followed by marker-based Watershed. Otherwise, you might consider a non-classical segmentation module, such as RunCellpose or RunStarDist (if your object is star-convex)"}}, "Medium: shapes are typically similar but not identical": {"cellprofiler_suggester": {"3D_False": false, "3D_True": false}}, "High: the shapes are nearly always identical": {"cellprofiler_suggester": {"3D_False": "You said your object shapes are nearly always identical; this is ideal. If however your segmentation is otherwise proving challenging, and your object is always in the same orientation, the MatchTemplate module may provide an additional way to help find the objects in your image. MatchTemplate can be tricky to use since it requires an external template image, so it should not be considered an option of first resort.", "3D_True": false}}}, "default_option_index": 1}, "15": {"index": 15, "short_name": "crowdedness", "full_name": "How close will each object typically be to its nearest neighbors of the same object type?", "select_all": false, "slider": true, "long_description": "Whether each object will typically be spatially full separated from neighbors, entirely touching neighbors, or something in between", "section": "object", "changes_based_on_3d": true, "options": {"No neighbors within 3 diameters": {"cellprofiler_suggester": {"3D_False": false, "3D_True": false}}, "Some neighbors within 1-3 diameters": {"cellprofiler_suggester": {"3D_False": false, "3D_True": false}}, "Some touching of neighbors": {"cellprofiler_suggester": {"3D_False": "You said that your objects will be typically be touching their neighbors. If possible, you might consider thresholding your segmentation image with the Threshold module and then running the Opening and/or ErodeImages modules on the thresholded image to try to create a mask that contains only well-separated object centers. You can use this centers image to create an 'ObjectCenter' object in IdentifyPrimaryObjects, then use IdentifySecondaryObjects to expand to the true object boundaries. Otherwise, segmentation of crowded objects may be challenging; if your objects have a one-to-one relationship with an enclosed or semi-enclosed more-easily-separable object (like cells and nuclei), you should consider identifying the ecnlosed object first with IdentifyPrimaryObjects and this object with IdentifySecondaryObjects. Otherwise, you might consider a non-classical segmentation module, such as RunCellpose or RunStarDist (if your object is star-convex)", "3D_True": "You said that your objects will be typically be touching their neighbors. If possible, you might consider thresholding your segmentation image with the Threshold module and then running the Opening and/or ErodeImages modules on the thresholded image to try to create a mask that contains only well-separated object centers. You can use this centers image to create an 'ObjectCenter' object in Watershed, then use the ObjectCenter as a marker in Watershed to expand to the true object boundaries. Otherwise, segmentation of crowded objects may be challenging; if your objects have a one-to-one relationship with an enclosed or semi-enclosed more-easily-separable object (like cells and nuclei), you should consider identifying the enclosed object first with Threshold and Watershed and then using these objects as seeds for a second round of Threshold followed by marker-based Watershed. Otherwise, you might consider a non-classical segmentation module, such as RunCellpose or RunStarDist (if your object is star-convex)"}}, "Entirely touching neighbors": {"cellprofiler_suggester": {"3D_False": "You said that your objects will be typically entirely touching their neighbors. Segmentation of such crowded objects may be challenging; if your objects have a one-to-one relationship with an enclosed or semi-enclosed more-easily-separable object (like cells and nuclei), you should consider identifying the ecnlosed object first with IdentifyPrimaryObjects and this object with IdentifySecondaryObjects. Otherwise, you might consider a non-classical segmentation module, such as RunCellpose or RunStarDist (if your object is star-convex)", "3D_True": "You said that your objects will be typically entirely touching their neighbors. Segmentation of such crowded objects may be challenging; if your objects have a one-to-one relationship with an enclosed or semi-enclosed more-easily-separable object (like cells and nuclei), you should consider identifying the enclosed object first with Threshold and Watershed and then using these objects as seeds for a second round of Threshold followed by marker-based Watershed. Otherwise, you might consider a non-classical segmentation module, such as RunCellpose or RunStarDist (if your object is star-convex)"}}}, "default_option_index": 0}, "16": {"index": 16, "short_name": "partial_object_handling", "full_name": "Should objects touching the border of the image be removed?", "select_all": false, "slider": false, "long_description": "Whether or not to remove objects that touch the border of the image. This should typically be set to 'Yes' if object sizes and/or total intensities are important; in the case where count is more important, setting to 'No' might be more appropriate", "section": "object", "changes_based_on_3d": true, "options": {"Yes": {"cellprofiler_suggester": {"3D_False": "You said objects touching the border should not be thrown out. Ensure that 'Discard objects touching the border of the image?' in IdentifyPrimary Objects is set to 'Yes', and/or throw them out after segmentation with FilterObjects using 'Select the filtering mode' set to 'Image or mask border'", "3D_True": "You said objects touching the border should not be thrown out. Ensure that 'Pixels from the border to exclude' in Watershed is set to '1' or greater if using the advanced Watershed settings, and/or throw them out after segmentation with FilterObjects using 'Select the filtering mode' set to 'Image or mask border'"}}, "No": {"cellprofiler_suggester": {"3D_False": "You said objects touching the border should not be thrown out. Ensure that 'Discard objects touching the border of the image?' in IdentifyPrimary Objects is set to 'No'", "3D_True": "You said objects touching the border should not be thrown out. Ensure that 'Pixels from the border to exclude' in Watershed is set to '0' if using the advanced Watershed settings"}}}, "default_option_index": 0}, "17": {"index": 17, "short_name": "object_count", "full_name": "Approximately how many objects of this type will be present in each image?", "select_all": false, "slider": true, "long_description": "The approximate number of objects expected in each image", "section": "object", "changes_based_on_3d": true, "options": {"0-3": {"cellprofiler_suggester": {"3D_False": "You said you expect 0-3 objects per image. You can set a hard cutoff for this in IdentifyPrimaryObjects by setting the 'Handling of objects if excessive number of identified' setting to 'Erase'; if the module's segmentation creates more than the 'Maximum number of objects' setting, all objects will be erased and no objects will be returned. You can also choose to flag or to skip image sets entirely based on the count of objects by adding a FlagImage module somewhere after IdentifyPrimaryObjects; set 'Flag image based on' to 'Whole-image measurement' setting and then choose the 'Count' category.", "3D_True": "You said you expect 0-3 objects per image. You can choose to flag or to skip image sets entirely based on the count of objects by adding a FlagImage module somewhere after Watershed; set 'Flag image based on' to 'Whole-image measurement' setting and then choose the 'Count' category."}}, "3-10": {"cellprofiler_suggester": {"3D_False": "You said you expect 3-10 objects per image. You can set a hard cutoff for this in IdentifyPrimaryObjects by setting the 'Handling of objects if excessive number of identified' setting to 'Erase'; if the module's segmentation creates more than the 'Maximum number of objects' setting, all objects will be erased and no objects will be returned. You can also choose to flag or to skip image sets entirely based on the count of objects by adding a FlagImage module somewhere after IdentifyPrimaryObjects; set 'Flag image based on' to 'Whole-image measurement' setting and then choose the 'Count' category.", "3D_True": "You said you expect 3-10 objects per image. You can choose to flag or to skip image sets entirely based on the count of objects by adding a FlagImage module somewhere after Watershed; set 'Flag image based on' to 'Whole-image measurement' setting and then choose the 'Count' category."}}, "10-100": {"cellprofiler_suggester": {"3D_False": "You said you expect 10-100 objects per image. You can set a hard cutoff for this in IdentifyPrimaryObjects by setting the 'Handling of objects if excessive number of identified' setting to 'Erase'; if the module's segmentation creates more than the 'Maximum number of objects' setting, all objects will be erased and no objects will be returned. You can also choose to flag or to skip image sets entirely based on the count of objects by adding a FlagImage module somewhere after IdentifyPrimaryObjects; set 'Flag image based on' to 'Whole-image measurement' setting and then choose the 'Count' category.", "3D_True": "You said you expect 10-100 objects per image. You can choose to flag or to skip image sets entirely based on the count of objects by adding a FlagImage module somewhere after Watershed; set 'Flag image based on' to 'Whole-image measurement' setting and then choose the 'Count' category."}}, "100-1000": {"cellprofiler_suggester": {"3D_False": "You said you expect 100-1000 objects per image. You can set a hard cutoff for this in IdentifyPrimaryObjects by setting the 'Handling of objects if excessive number of identified' setting to 'Erase'; if the module's segmentation creates more than the 'Maximum number of objects' setting, all objects will be erased and no objects will be returned. You can also choose to flag or to skip image sets entirely based on the count of objects by adding a FlagImage module somewhere after IdentifyPrimaryObjects; set 'Flag image based on' to 'Whole-image measurement' setting and then choose the 'Count' category.", "3D_True": "You said you expect 100-1000 objects per image. You can choose to flag or to skip image sets entirely based on the count of objects by adding a FlagImage module somewhere after Watershed; set 'Flag image based on' to 'Whole-image measurement' setting and then choose the 'Count' category."}}, "1000-10000": {"cellprofiler_suggester": {"3D_False": "You said you expect 100-1000 objects per image. You can set a hard cutoff for this in IdentifyPrimaryObjects by setting the 'Handling of objects if excessive number of identified' setting to 'Erase'; if the module's segmentation creates more than the 'Maximum number of objects' setting, all objects will be erased and no objects will be returned. You can also choose to flag or to skip image sets entirely based on the count of objects by adding a FlagImage module somewhere after IdentifyPrimaryObjects; set 'Flag image based on' to 'Whole-image measurement' setting and then choose the 'Count' category. Note that pipelines which make very large numbers of objects may suffer from increased memory usage.", "3D_True": "You said you expect 100-1000 objects per image. You can choose to flag or to skip image sets entirely based on the count of objects by adding a FlagImage module somewhere after Watershed; set 'Flag image based on' to 'Whole-image measurement' setting and then choose the 'Count' category. Note that pipelines which make very large numbers of objects may suffer from increased memory usage."}}}, "default_option_index": 2}, "18": {"index": 18, "short_name": "meas_object_self", "full_name": "Which object-intrinsic measurements should be made? Select all that apply", "select_all": true, "slider": false, "long_description": "The ways in which the objects should be measured. Note that 'Intensity values' can be intensity of any provided image, such as a fluorescent channel, a processed FLIM lifeteime image, a distance map to some other landmark made with the Morph module, etc", "section": "measurement", "changes_based_on_3d": false, "options": {"Shape and/or size": {"cellprofiler_suggester": "You said you wish to measure shape and/or size. Be sure to add the MeasureObjectSizeShape module to the pipeline."}, "Intensity values": {"cellprofiler_suggester": "You said you wish to measure intensity values. Be sure to add the MeasureObjectIntensity module to the pipeline."}, "Intensity spatial distribution": {"cellprofiler_suggester": "You said you wish to measure the spatial distribution of the intensity. Be sure to add the MeasureObjectIntensityDistribution module to the pipeline."}, "Texture/granularity": {"cellprofiler_suggester": "You said you wish to measure texture and/or granularity. Be sure to add the MeasureTexture (with 'Measure whole images or objects?' set to either 'Objects' or 'Both') and/or the MeasureGranularity module (with 'Measure within objects?' set to 'Yes') to the pipeline."}, "Colocalization of channels": {"cellprofiler_suggester": "You said you wish to measure colocalization of channels. Be sure to add the MeasureColocalization module (with 'Select where to measure correlation' set to 'Within objects' or 'Both') to the pipeline."}, "Motion parameters": {"cellprofiler_suggester": "You said you wish to measure motion parameters. Be sure to add the TrackObjects module to the pipeline; see the suggestions for 'Are you trying to analyze images from a timelapse series?' for more information about how to set up a pipeline to correctly support tracking."}}, "default_option_index": 0}, "19": {"index": 19, "short_name": "meas_other_objects", "full_name": "Measurements requring other objects and/or image context (select all that apply)", "select_all": true, "slider": false, "long_description": "Measurements that don't come from just the object being measured, but from its relationship to some other object. This might be an object of the same kind (such as a cell's distance to its closest cell) OR a different kind of object (such as the number of speckles inside a nucleus)", "section": "measurement", "changes_based_on_3d": true, "options": {"Count of parent/child objects of a different type": {"cellprofiler_suggester": {"3D_False": "To measure the count of parent/child objects of a different type, once both kinds of objects (the larger 'parent' objects and the smaller 'child' objects have been found), use the RelateObjects module to connect them. If you want to calculate per-parent means (ie if you want to know in each nucleus, what is the average speckle area), make sure to put RelateObjects AFTER your measurement modules", "3D_True": "To measure the count of parent/child objects of a different type, once both kinds of objects (the larger 'parent' objects and the smaller 'child' objects have been found), use the RelateObjects module to connect them. If you want to calculate per-parent means (ie if you want to know in each nucleus, what is the average speckle area), make sure to put RelateObjects AFTER your measurement modules"}}, "Distance to/overlap with other objects of same type": {"cellprofiler_suggester": {"3D_False": "You said you wanted to measure distance to and/or overlap with other objects of the same type. CellProfiler only supports direct object overlap under certain circumstances, such as the UntangleWorms module, and doesn't currently have a good way of measuring it. If you want to calculate distance, you can use the MeasureObjectNeighbors module", "3D_True": "You said you wanted to measure distance to and/or overlap with other objects of the same type. CellProfiler currently doesn't support object overlap in 3D. If you want to calculate distance, you can use the MeasureObjectNeighbors module"}}, "Distance to/overlap with other objects of a different type": {"cellprofiler_suggester": {"3D_False": "You said you wanted to measure distance to and/or overlap with another kind of object. This can be measured with the MeasureObjectNeighbors module and/or the MeasureObjectOverlap module", "3D_True": "You said you wanted to measure distance to and/or overlap with another kind of object. Unfortunately, CellProfiler currently doesn't calculate object overlap in 3D. If you want to calculate distance, you can use the MeasureObjectNeighbors module"}}}, "default_option_index": 0}}